{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"OMICS focus group workshop","text":"<p>Updated: August 28, 2023</p> <p>A relaxed introductory workshop to genomics, transcriptomics and proteomics using the Health Data Science Sandbox. Everything works on an interactive coding setup on <code>jupyterlab</code> and partially on a <code>Virtual machine</code>, while the code is written in <code>python</code>, <code>R</code> and <code>bash</code>. The workshop is designed to be a hands-on experience, where the participants will be able to run the code themselves and get a feel for the data and OMICS-specific software and code. </p> <p>Computing power is provided through <code>uCloud</code> - look at the top menu for instructions on how to access it.</p> <p>Every day covers a different OMICS, and you will find instructions for each tutorial in the top menu of this webpage.</p> <p></p> Authors <p>Samuele Soraggi</p> <p>  Data Scientist </p> <p>J.A. Romero Herrera</p> <p>  Data Scientist </p> <p>Jacob Fredegaard Hansen</p> <p>  Data Scientist </p> <p>Overview</p> <p> Syllabus: </p> <ol> <li>Quality control and filtering of raw data  </li> <li>Performance of various type of statistical analysis which lead to biological interpretation</li> <li>Understanding the connection between the different OMICS</li> <li>Acquiring the skills to perform the analysis on your own data</li> <li>Be able to consider which OMICS data is appropriate for a specific biological question, and which are the limitations and technical properties of the data </li> </ol> <p> Total Time Estimation: 9 hours  </p> <p> Supporting Materials: Slides and computing exercises hosted on computing cluster</p> <p> Target Audience: PhD, MsC, etc.</p> <p> Level: Beginner/Intermediate</p> <p> License: Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0) license.</p> <p> Funding: This project was funded by the Novo Nordisk Fonden (NNF20OC0063268).</p> <p>Course Requirements</p> <p>Mostly some standard understanding of cell biology, no prior knowledge of coding is required (though a minimum is an advantage)</p>"},{"location":"Genomics.html","title":"Genomics workshop","text":"<p>This workshop goes through  the analysis of Genomics data from raw data quality control and alignment, to SNP calling and filtering. We will start from raw output of an illumina and PacBio Hifi machines.</p> <p>Goals</p> <p>By the end of the genomics workshop, you will know how to</p> <ul> <li>perform and discuss quality control on raw data in <code>fastq</code> format using <code>FastQC</code> and <code>MultiQC</code></li> <li>align HiFi and RNA sequencing data with dedicated tools such as <code>MiniMap2</code> and <code>STAR</code></li> <li>analyze the quality of the alignment with <code>qualimap</code></li> <li>call variants using alignment files</li> <li>extract data from <code>VCF</code> files using <code>Python</code></li> <li>filter and count variants </li> </ul>"},{"location":"Genomics.html#introductory-presentation-slides-and-video","title":"Introductory Presentation (slides and video)","text":"<p>Download the slides in pdf format from this link</p>"},{"location":"Genomics.html#step-by-step-tutorial","title":"Step-by-Step tutorial","text":"<p>In what follows you will learn how to start the app to work on the tutorial. Then you have all the steps to perform the analysis of the data. The Genomics app contains various courses you can do on your own, but right now we will add manually the data and the notebooks for this workshop, since they have been tailored to fir into our time frame.</p>"},{"location":"Genomics.html#start-the-genomics-sandbox-app","title":"Start the genomics sandbox app","text":"<p>The genomics sandbox is on <code>Ucloud</code>, an interactive online platform from the University of Southern Danmark eScience center that allows users to execute softwares and computer code directly from their browser. If you are enrolled in a danish university or hospital, you can access the platform for free.</p> <p>Please follow these instructions to access uCloud and get to work on the tutorial:</p> <ul> <li>Be sure you have joined the project <code>OMICS workshop</code>. Check if you have the project <code>OMICS workshop</code> from the project menu (red circle) and choose it. Afterwards, click on the <code>App</code> menu (green circle)</li> </ul> <p></p> <ul> <li>Find the app <code>Genomics Sandbox</code> (red circle), which is under the title <code>Featured</code>.</li> </ul> <p></p> <ul> <li>Click on it. You will get into the settings window. Choose any Job Name (Nr 1 in the figure below), how many hours you want to use for the job (Nr 2; choose at least 3 hours, you can increase this later), and how many CPUs (Nr 3, choose at least 4 CPUs). Choose the course <code>Introduction to NGS data analysis</code> from the drop-down menu (Nr 4).Finally, click on <code>Add Folder</code> (Nr 5).</li> </ul> <p></p> <ul> <li>Now, click on the browsing bar that appears (red circle).</li> </ul> <p></p> <ul> <li>In the appearing window, find the project <code>OMICS workshop</code> (Nr 1 in figure below), the drive <code>Day1 - Genomics</code> (Nr 2) and navigate through the folder with your name (Nr 3, where you see my name, but you should choose your own name of course). Then click on the folder <code>Notebooks</code> inside your personal folder and on the blue button <code>Use</code> on the right side of the folder <code>Data</code>. In this way we will avoid to wait to download the data every time we use the app.</li> </ul> <p></p> <ul> <li> <p>Repeat the same process: click on <code>Add Folder</code> from the settings page and open the browsing window. This time, open your personal folder and click on the blue button <code>Use</code> on the right of the folder <code>Notebooks</code>. This step is necessary to use our own tutorial and not the full-course material.</p> </li> <li> <p>Afterwards, you should have something like this in the settings page:</p> </li> </ul> <p></p> <ul> <li> <p>Now, click on Submit to start the app (the button is on the right side of the settings page)</p> </li> <li> <p>You will now enter a waiting queue. When the session starts, the timer begins to count down (red circle), and you should be able to open the interface through the button (green circle). Note the buttons to add time to your session (blue circle) and the button to stop the session when you are done (pink circle)</p> </li> </ul> <p></p> <ul> <li>Open the interface by clicking on the button (green circle of figure above). Sometimes you are warned of a missing connection: simply refresh the page. You will enter <code>jupyterlab</code> (an interface to code interactively in text-like documents) and see a screen as below. Here there is a file browser (Nr 1) and you can change its size by dragging the separator (Nr 2)</li> </ul> <p></p> <ul> <li> <p>Open the <code>Notebooks</code> folder in the browser, and double click on the file <code>Alignment_and_Variants.ipynb</code>. You just opened a so-called  notebook containing text, figures and code. On the right side of jupyterlab you will see the content of the notebook which is the tutorial.</p> </li> <li> <p>Below you can see a screenshot of a section in the notebook. You can run the code by clicking on the <code>Run</code> button (red circle) or by pressing <code>Shift+Enter</code> on your keyboard. Text and code are in separate containers called <code>cells</code>. You can double click a cell and edit its content, add cells or remove them with the control buttons on top of the windows. Note the <code>kernel</code> in use, which contains the software preinstalled to run all the code. When you open multiple files (notebooks but also figures, pdfs, web documents, tables, text files), you switch between them with tabs as in an internet browser.</p> </li> </ul> <p></p> <ul> <li>Read through the notebook's tutorial and execute the code cells in order from the top to the bottom of the tutorial. You will see some outputs in your notebook. Follow carefully the instructions in the notebook - I put some questions and important comments along the way.</li> </ul> <p>For those who want more</p> <ul> <li>The tutorial is quite long. If you do not finish it all at once, do not worry! You can run it again at any time - the workshop access on <code>uCloud</code> and all the files will be kept available after the workshop.</li> <li>Do you want to learn more about NGS data, GWAS and population genomics? Select one of those courses from the Genomics Sandbox App on uCLoud (without adding the folders specific for this tutorial).</li> </ul>"},{"location":"Proteomics.html","title":"Proteomics workshop","text":"<p>This workshop goes through  the analysis of proteomics data. We will start from raw output from a mass spectrometer, identify the peptides and the proteins they belong to with <code>searchGUI</code>, and perform some basic analysis using <code>PeptideShaker</code>, <code>python</code> code and some online tools.</p> <p>Goals</p> <p>By the end of the proteomics workshop, you will</p> <ul> <li>Understand how raw proteomics data is created, and generalize to other specific structure of Mass Spectrometry Hardware</li> <li>Apply pipelines to identify peptides and proteins from raw data, and save the final identifications into tables for data analysis</li> <li>Generate a simple differential proteomics analysis between conditions</li> <li>Apply the resulting lists of proteins and genes to web tools to highlight their biological meaning</li> </ul>"},{"location":"Proteomics.html#introductory-presentation-slides-and-video","title":"Introductory Presentation (slides and video)","text":"<p>Download the slides in pdf format from this link</p>"},{"location":"Proteomics.html#step-by-step-tutorial","title":"Step-by-Step tutorial","text":"<p>In what follows you will learn how to start the app to work on the tutorial. Then you have all the steps to perform the analysis of the data.</p>"},{"location":"Proteomics.html#start-the-proteomics-sandbox-app","title":"Start the proteomics sandbox app","text":"<ul> <li>Be sure you have joined the project <code>OMICS workshop</code>. Check if you have the project <code>OMICS workshop</code> from the project menu (red circle) and choose it. Afterwards, click on the <code>App</code> menu (green circle)</li> </ul> <ul> <li>Find the app <code>Proteomics Sandbox</code> (red circle), which is under the title <code>Featured</code>.</li> </ul> <ul> <li>Click on it. You will get into the settings window. Choose any Job Name (Nr 1 in the figure below), how many hours you want to use for the job (Nr 2, choose at least 3 hours, you can increase this later), and how many CPUs (Nr 3, choose at least 8 CPUs). Finally, click on <code>Add Folder</code> (Nr 4 in figure below)</li> </ul> <ul> <li>Now, click on the browsing bar that appears (red circle).</li> </ul> <ul> <li>In the appearing window, find the project <code>OMICS workshop</code> (Nr 1 in figure below), the drive <code>Day3 - Proteomics</code> (Nr 2) and click on <code>Use</code> where there is a folder corresponding to your name (Nr 3).</li> </ul> <ul> <li>Afterwards, it should look like this:</li> </ul> <ul> <li>Now, click on Submit to start the app (red circle)</li> </ul> <ul> <li>You will now enter a waiting queue. When the session starts, the timer begins to count down (red circle), and you should be able to open the interface through the button (green circle). Note the buttons to add time to your session (blue circle) and the button to stop the session when you are done (pink circle)</li> </ul> <ul> <li>Open the interface by clicking on the button (green circle of figure above). You will enter a virtual machine (an operating system running into another computer) where you have various tools installed and visible on the desktop. A welcoming webpage with a short description of the sandbox will apear - you can have a quick look at it and close it.</li> </ul>"},{"location":"Proteomics.html#quantify-proteins-with-searchgui","title":"Quantify proteins with <code>searchGUI</code>","text":"<p>The first step of a proteomics analysis is the quantification of proteins from raw mass spectrometry data. This data - when produced by a Fisher Thermo mass spectrometer - is in <code>.raw</code> format, and contains the histograms created over the measuring experiment. The histogram represents the detected mass/charge ratio of various peptides (see figure below).</p> <p></p> <p>Figure: histogram of mass/charge of peptides detected by the mass spectrometer over the time of the experiment. Peptides have been separated by liquid chromatography so that they can be correctly identified. Each peak is used as the best measure of a peptide.</p> <p>The software <code>searchGUI</code> compares those peaks to calculate their differences in mass/charge. Each difference is used to identify a unique aminoacid connecting two peptides. Through algorithmics procedures (the most famous of which are <code>Xtandem</code> and <code>MSfragger</code>, but there are many others) the peptides are chained together compatibly with the aminoacids identity and a reference proteome.</p> <ul> <li>Open the <code>searchGUI</code> software by double-clicking on the icon on the desktop. You will see a window like this:</li> </ul> <p></p> <ul> <li> <p>For the option <code>Search Settings</code> click on <code>Add</code>. Choose any name and click on <code>Spectrum Matching</code>. Here there is a default setting which is good for most of the cases. Click directly on <code>OK</code> to confirm. You should then be able to click on <code>Save</code>.</p> </li> <li> <p>In the main window, click on <code>Add</code> for the option <code>Spectrum File</code>. This is the file in <code>.raw</code> format from the Mass Spectrometer. Click on the button <code>up one level</code> (red circle in figure) and find the file <code>/work/YOUR_NAME/searchGUI/Azoospermic_23/Azoospermic_23.raw</code>. </p> </li> </ul> <p></p> <ul> <li> <p>Use <code>Add</code> for the option <code>Database File</code>, which is the reference file containing known proteins and is in <code>.fasta</code> format. You will find it in the raw data folder <code>/work/YOUR_NAME/searchGUI/Azoospermic_23</code>. When choosing the fasta file, a window with some info might open: just click on ok.</p> </li> <li> <p>For the option <code>Output Folder</code> click on <code>Add</code> and choose the raw data folder <code>/work/YOUR_NAME/searchGUI/Azoospermic_23</code>.</p> </li> <li> <p>Now you should be back to the main window. Choose the <code>X! Tandem</code> method as search engine. Now you are ready to click on <code>Start Search</code> (green button in figure below) and wait for the process to finish. It should take around 10 minutes. There are other 5 samples for which this process has already been executed beforehand. While you wait, you can start reading the information about the next step.</p> </li> </ul> <p></p>"},{"location":"Proteomics.html#filtering-and-exploring-quantified-data-with-peptide-shaker","title":"Filtering and Exploring quantified data with <code>Peptide Shaker</code>","text":"<p>After the identification step is ended, we can open the result file and explore the data. The software <code>Peptide Shaker</code> filters the data annotating which protein have been confidently/dubiously according to a false discovery rate threshold. With <code>Peptide Shaker</code> we can also look at some statistics about the data, and explore the proteins and peptides identified.</p> <ul> <li>Open the <code>Peptide Shaker</code> software by double-clicking on the icon on the desktop. Click on <code>New project</code> in the appearing window. Then you will see a window like this:</li> </ul> <p></p> <ul> <li>Write any name for <code>Project Reference</code>. For <code>Identification File</code>, choose <code>Add</code>, and find the file <code>/work/YOUR_NAME/searchGUI/Azoospermic_23/searchgui_out.zip</code>. You will also find automatically the fasta file after this choice, but a warning windows will tell you to find yourself a file in format <code>.mzml</code> (figure below)</li> </ul> <p></p> <ul> <li> <p>For the option <code>Spectrum File</code>, find the file <code>Azoospermic_23.mzML</code> (which is a simple conversion of the <code>.raw</code> file into a more common format) in the folder <code>/work/YOUR_NAME/searchGUI/Azoospermic_23</code>.</p> </li> <li> <p>In <code>Identification</code>, open the dropdown menu. You should find the name of the <code>searchGUI</code> project before and choose it. </p> </li> <li> <p>At the end you should have a window like the one below. Click on the green button to load the data!</p> </li> </ul> <p></p> <ul> <li>The main window presents tables with proteins, peptides and spectra. You can click on the column names to sort the data by a specific factor. You can also click on the buttons on the top to see the statistics of the data. If you click on the accession name of a protein, you will open the related information webpage of the  <code>Uniprot</code> database. Try to click on the first protein, and you will see how it is related to the production of sperm.</li> </ul> <p></p> <ul> <li> <p>On the right side of the window, there are other tabs you can open. For example, the tab <code>Spectrum ID</code> shows the histogram of the mass/charge ratio of the peptides identified. You can click on the peaks to see the related information.</p> </li> <li> <p><code>Modifications</code> will show at which aminoacids changes have been identified. You can click on the modifications to see the related information.</p> </li> <li> <p><code>3D structure</code> will show you the 3d plots of a protein's peptides inside a protein/protein complex, including its modifications.</p> </li> </ul> <p></p> <ul> <li><code>GO analysis</code> will show you the gene ontology terms associated to the proteins identified. You can click on the terms to see the related information.</li> </ul> <p></p> <ul> <li><code>Validation</code> will show you some quality plots related to the data. Here you can change a FDR (<code>False Discovery Rate</code>) threshold for the identification of proteins, which by default is set at 1%. Try to change it to 5% and see how the number of identified proteins changes.</li> </ul> <p></p> <ul> <li><code>Validation</code> will show you some quality plots related to the data. Here you can change a FDR (<code>False Discovery Rate</code>) threshold for the identification of proteins, which by default is set at 1%. Try to change it to 5% and see how the number of identified proteins changes.</li> </ul> <p>After you have played with <code>PeptideShaker</code>, you can export the results into tables, that can be conveniently opened in Excel, but also used for analysis in <code>Python</code> as we will do shortly. We need to export the protein report, including all the information you could see in the opening page of <code>PeptideShaker</code>.</p> <ul> <li>On the top menu, click on <code>Export --&gt; Identification Features</code> and choose <code>Default Protein Report</code>. Save it in the folder <code>/work/YOUR_NAME/searchGUI/Azoospermic_23</code> with its default name. Do the same for the <code>Default Peptide Report</code>, which contains information useful for data normalization.</li> </ul>"},{"location":"Proteomics.html#data-analysis-in-python","title":"Data analysis in Python","text":"<p>Now we will use the <code>jupyterlab</code> interface to analyze the data with the <code>Python</code> language. <code>jupyterlab</code> is a web interface that allows you to write code in <code>Python</code> (but also any other language) and visualize the results in the same page. You can also write text and visualize images, so it is a very useful tool for teaching and learning data analysis.</p> <ul> <li>Open the <code>jupyterlab</code> interface by clicking on <code>Applications</code> (top-left corner of the desktop), then <code>Development --&gt; Jupyter Notebook</code>.</li> </ul> <p></p> <ul> <li>The browser will launch in a few, and in the webpage that shows (figure below) find and open the file <code>YOUR_NAME/Jupyterlab/analysis.ipynb</code></li> </ul> <p></p> <ul> <li>The code shows in a page as the one in the figure below. The file you just opened is a <code>notebook</code> containing text and code. Each piece of text or code is contained in a cell which can be selected by clicking on it, and you usually read everything from the top of the document to the bottom. You can run a selected cell by clicking on the <code>Run</code> symbol on the top menu, or more easily with the keys <code>shift+enter</code>.</li> </ul> <p></p> <p>Go through all the code and read the instructions to perform the comparison between samples from Normal and Infertile patients and find interesting proteins and genes which are predominant in one of the two conditions. </p> <p>When you reach the end of the notebook, continue reading this tutorial to apply some web tools to the results from the code.</p>"},{"location":"Proteomics.html#data-analysis-with-web-tools","title":"Data analysis with web tools","text":"<p>We apply various tools to the resulting protein lists of the <code>Python</code> code. </p>"},{"location":"Proteomics.html#string","title":"STRING","text":"<p>STRING is a database where you can input one or more proteins, and it will show you the network of known proteins interactions within your input list. Moreover, it will use the database to find other proteins known to be interacting with the provided list. It is a very useful tool to understand the role of a protein in a biological process, and to find other proteins that are related to it.</p> <p>To generate a network, </p> <ul> <li>go on the STRING webpage. Choose <code>Search</code> on top of the page, and from the left menu choose <code>Multiple Proteins</code>. </li> </ul> <p></p> <ul> <li>Copy the column with the protein names found for the <code>Normal</code> condition in the Notebook (the list should have 28 proteins). Paste it in the search prompt, and choose the homosapiens organism in the options.</li> <li>Then click on <code>Search</code>. A window with the protein names that match the database is shown. Click on <code>Continue</code>.</li> </ul> <p>You will see a network with nodes that represent proteins, and edges that are their known connections (co-expressions, physical interaction, ...) as in figure below. </p> <p></p> <p>There are buttons allowing you to do a variety of actions. An interesting thing is the possibility of clustering and using the button More to search in the STRING database for further proteins that are known to interact with the ones in the network. The analysis button gives you significant matches in many databases (protein functions, tissues, pathways, ...).</p>"},{"location":"Proteomics.html#3d-structure-comparison","title":"3D structure comparison","text":"<p>The way a protein is folded in 3D is very important for its function. The 3D structure is usually determined by X-ray crystallography, but it is also possible to predict it from the aminoacid sequence (using for example Google's <code>Alphafold</code>). Such a prediction is saved in a file in format <code>.pdb</code>. The 3D structure is usually represented as a ribbon connecting the aminoacids (picture below).</p> <p></p> <p>Usually you want to compare proteins that have a connection in the STRING network, or proteins arising from genes that are found to be coexpressed in the same cell type (if you have been analyzing bulkRNA or single-cell-RNA sequencing data).</p> <p>In our example we look at two proteins connected in STRING, which corresponds to the genes AP1B1 and AP2B1. Their structures in <code>pdb</code> format are already downloaded in the folder <code>/work/YOUR_NAME/3D_structure</code>, downloaded from the 3D structure database on the Alphafold home page.</p>"},{"location":"Proteomics.html#comparison-with-dali","title":"Comparison with DALI","text":"<p><code>DALI</code> is a protein comparison software which has been made available online by its creators. You can provide it with two or more <code>.pdb</code> files and it will compare them, giving you a score of similarity.</p> <ul> <li> <p>Go on the DALI webpage. Click on <code>Pairwise</code> to compare two proteins: this compares one protein to a list of proteins (<code>All against all</code> can be used if you want to do all possible pairwise comparisons of a group of <code>.pdb</code> files).</p> </li> <li> <p>Upload the two <code>.pdb</code> files.</p> </li> <li> <p>Submit the analysis request. Wait some time for the results to be calculated. At some point, you should see two choices: interactive html report or text report. Choose the first one.</p> </li> <li> <p>You will see the result of the statistical test for similarity. Here a <code>Z</code>-score above 2 means you have been reaching some similarity. In our case the Z-score is really high, and the <code>%</code> of identical sequence is 86% (picture below). This means a very similar 3D structure and a very similar sequence of aminoacids - thus some degree of simnilarity in their functionality.</p> </li> </ul> <p></p> <p>Note: If you want to open and compare protein structures on your computer, you can use the software <code>pyMOL</code>, which is beautiful for exploring <code>.pdb</code> files. However, it is free only through the website <code>https://pymol.org/edu</code>, where you can only use it for courses/study, but not for publishing. If you want to use it for publishing, you need to buy a license or use free softwares like <code>Avogadro</code>, which is also a quite good freeware.</p>"},{"location":"Proteomics.html#exploring-reactome-pathways","title":"Exploring reactome pathways","text":"<p>A very useful tool is the REACTOME database, which performs a statistical analysis of a protein list and provides you with significant pathways that are enriched in the list. </p> <ul> <li> <p>Go on the REACTOME webpage. Click on <code>Analysis tools</code> on the home page.</p> </li> <li> <p>Paste the same protein list used for STRING into the prompt for the proteins to analyse (figure below)</p> </li> </ul> <p></p> <ul> <li>A window with the option of using an additional database of interactions is shown. You can choose to use it as well and press <code>Continue</code></li> </ul> <p></p> <ul> <li>You will see a graphical representation, where each graph is a category of interactions. Some graphs have branches colored in yellow: those are parts of interactions databases significant (with pvalue&lt;0.05) for our search and showing protein functions. Below, you can see a list of the significant functions, and you can click on them to see the related information and zoom into the network. There are options to export tables and pictures of the results.</li> </ul> <p></p> <ul> <li>For example, we can see the <code>inactivation of CSF3 signaling</code> pathway. Reduced CSF3 signaling is known to be associated with higher sperm motility, and this matches the fact that we are looking at proteins more expressed in fertile samples.</li> </ul> <p></p> <p>Other resources</p> <ol> <li>A really good series of introductory lectures in Proteomics (with explanations of mass spectrometry and proteomics analysis) on youtube</li> <li>Further Tutorials for proteomics by the team behind <code>PeptideShaker</code> and <code>searchGUI</code></li> </ol>"},{"location":"Transcriptomics.html","title":"Transcriptomics workshop","text":"<p>This workshop goes through the analysis of Single Cell Transcriptomics data from expression matrix filtering, to downstream analysis (dimensionality reduction, clustering, differential gene expression, external database access). In this workshop the data is generate with the droplet technology Chromium 10x (v2 chemistry).</p> <p>Goals</p> <p>By the end of the transcriptomics workshop, you will know how to perform an extensive analysis of single cell transcriptomics data, from gene expression matrix to biological interpretation. In particular, you will be able to:</p> <ul> <li>determine and apply proper filtering criteria on the expression matrix</li> <li>apply and calibrate dimensionality reduction methods (PCA and UMAP) </li> <li>Cluster, subcluster and annotate cell types in the data</li> <li>Perform and use differential gene expression to confirm cluster annotation and other gene-based analysis</li> <li>extract information from external databases for GO terms analysis and other applications</li> </ul>"},{"location":"Transcriptomics.html#introductory-presentation-slides-and-video","title":"Introductory Presentation (slides and video)","text":"<p>Download the slides in pdf format from this link</p>"},{"location":"Transcriptomics.html#step-by-step-tutorial","title":"Step-by-Step tutorial","text":"<p>In what follows you will learn how to start the app to work on the tutorial. Then you have all the steps to perform the analysis of the data. The Transcriptomics app contains various courses you can do on your own, but right now we will simply start Rstudio with all the necessary packages preinstalled and add our own files for the tutorial.</p>"},{"location":"Transcriptomics.html#start-the-genomics-sandbox-app","title":"Start the genomics sandbox app","text":"<p>The transcriptomics sandbox is on <code>Ucloud</code>, an interactive online platform from the University of Southern Danmark eScience center that allows users to execute softwares and computer code directly from their browser. If you are enrolled in a danish university or hospital, you can access the platform for free.</p> <p>Please follow these instructions to access uCloud and get to work on the tutorial:</p> <ul> <li>Be sure you have joined the project <code>OMICS workshop</code>. Check if you have the project <code>OMICS workshop</code> from the project menu (red circle) and choose it. Afterwards, click on the <code>App</code> menu (green circle)</li> </ul> <p></p> <ul> <li>Find the app <code>Transcriptomics Sandbox</code> (red circle), which is under the title <code>Featured</code>.</li> </ul> <p></p> <ul> <li>Click on it. You will get into the settings window. Choose any Job Name (Nr 1 in the figure below), how many hours you want to use for the job (Nr 2; choose at least 3 hours, you can increase this later), and how many CPUs (Nr 3, choose at least 4 CPUs). Choose the course <code>RNAseq in RStudio</code> from the drop-down menu (Nr 4). Finally, click on the blue button <code>Add Folder</code>.</li> </ul> <p></p> <ul> <li>Now, click on the browsing bar that appears (red circle).</li> </ul> <p></p> <ul> <li>In the appearing window, find the project <code>OMICS workshop</code> (Nr 1 in figure below), the drive <code>Day2 - Transcriptomics</code> (Nr 2) and click on the folder with your name (Nr 3, where you see my name, but you should choose your own name of course).</li> </ul> <p></p> <ul> <li>Then click on the blue button <code>Use</code> on the right side of the folder  <code>Intro_to_scRNAseq_R</code> inside your personal folder (red circle). In this way you have your personal tutorial material.</li> </ul> <p></p> <ul> <li>Afterwards, you should have something like this in the settings page:</li> </ul> <p></p> <ul> <li> <p>Now, click on Submit to start the app (the button is on the right side of the settings page)</p> </li> <li> <p>You will now enter a waiting queue. When the session starts, the timer begins to count down (red circle), and you should be able to open the interface through the button (green circle). Note the buttons to add time to your session (blue circle) and the button to stop the session when you are done (pink circle)</p> </li> </ul> <p></p> <ul> <li>Open the interface by clicking on the button (green circle of figure above). Sometimes you are warned of a missing connection: simply refresh the page. You will enter <code>Rstudio</code>, well-known interface to code in <code>R</code>. Here there is a file browser (Nr 1), and the code window (Nr 2), and you can change the size of the panels by dragging the separators.</li> </ul> <p></p> <ul> <li>Open the folder <code>Intro_to_scRNAseq_R</code> folder in the browser, and click on the file <code>scRNAseq_Tutorial_R.Rmd</code>. You just opened a so-called <code>R Markdown</code> document containing text, figures and code. Click now on <code>visual</code> (red circle) to see the tutorial in a more readable format. The executable code is inside cells to be executed in order from the first to the last using the green arrow (blue circle)</li> </ul> <p></p> <ul> <li>Read carefully through the notebook's tutorial and execute the code cells in order from the top to the bottom of the tutorial. You will see some outputs in your notebook. </li> </ul> <p>For those who want more</p> <ul> <li>The tutorial is quite long. If you do not finish it all at once, do not worry! You can run it again at any time - the workshop access on <code>uCloud</code> and all the files will be kept available after the workshop.</li> <li>The transcriptomics Sandbox App on uCLoud contains the whole courses on single cell RNA sequencing analysis and bulk RNA analysis. You can run them at any time as well using the computing credit of the project <code>OMICS workshop</code>, or your own credits.</li> </ul>"},{"location":"contributors.html","title":"Contributors","text":"<p>Jose Alejandro Romero Herrera  </p>","tags":["authors","contributors"]},{"location":"contributors.html#credit-table","title":"CRediT table","text":"CRediT role Initials Conceptualization Data curation Formal Analysis Funding acquisition Investigation Methodology Project administration Resources Software Supervision Validation Visualization Writing - original draft Writing - review &amp; editing","tags":["authors","contributors"]},{"location":"empty.html","title":"General page","text":""},{"location":"empty.html#general-page","title":"General Page","text":"<p>Last updated: August 11, 2023</p> <p>Section Overview</p> <p>\ud83d\udd70 Time Estimation: X minutes  </p> <p>\ud83d\udcac Learning Objectives:      1. First item     2. Second item  </p> <p>Write your introduction to the page here.</p>"},{"location":"empty.html#useful-functions","title":"Useful functions","text":"<p>You should continue to write your markdown document as normal. But here are some useful functions.  You can find more in the Reference guide listed on the tab above. Be sure to delete the guide  and the tips below when finished with them.</p>"},{"location":"empty.html#code","title":"Code","text":"<p>Text will be highlighted appropriately when you include language abbreviation:</p> <pre><code>import tensorflow as tf\n</code></pre>"},{"location":"empty.html#admonitions","title":"Admonitions","text":"<p>The admonitions used for course/section overview and requirements should be consistent, though you  can use any other admonitions freely.</p> <p>Examples (both drop-down and not):</p> <p>Quote</p> <p>Here is a quote</p> What is the smallest country in the world? <p>A: Vatican City</p>"},{"location":"empty.html#footnotes","title":"Footnotes","text":"<p>We can include footnotes like this one1.</p>"},{"location":"empty.html#latex","title":"LaTeX","text":"<p>You write an equation as normal:</p> \\[ \\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}} \\]"},{"location":"empty.html#images","title":"Images","text":"<p>Format is similar to links, but include an exclamation mark before: </p> <p></p> <p>You can link to a URL or to somewhere locally.</p>"},{"location":"empty.html#tables","title":"Tables","text":"<p>You can render tables directly like this:</p> <pre><code>| sample     | fastq_1                          |   fastq_2 | strandedness   | condition            |\n|:-----------|:---------------------------------|----------:|:---------------|:---------------------|\n| Control_3  | 778339/merge/Irrel_kd_3.fastq.gz |       nan | unstranded     | control              |\n| Control_2  | 778339/merge/Irrel_kd_2.fastq.gz |       nan | unstranded     | control              |\n| Control_1  | 778339/merge/Irrel_kd_1.fastq.gz |       nan | unstranded     | control              |\n| Mov10_oe_3 | 778339/merge/Mov10_oe_3.fastq.gz |       nan | unstranded     | MOV10_overexpression |\n| Mov10_oe_2 | 778339/merge/Mov10_oe_2.fastq.gz |       nan | unstranded     | MOV10_overexpression |\n| Mov10_oe_1 | 778339/merge/Mov10_oe_1.fastq.gz |       nan | unstranded     | MOV10_overexpression |\n| Mov10_kd_3 | 778339/merge/Mov10_kd_3.fastq.gz |       nan | unstranded     | MOV10_knockdown      |\n| Mov10_kd_2 | 778339/merge/Mov10_kd_2.fastq.gz |       nan | unstranded     | MOV10_knockdown      |\n</code></pre> sample fastq_1 fastq_2 strandedness condition Control_3 778339/merge/Irrel_kd_3.fastq.gz nan unstranded control Control_2 778339/merge/Irrel_kd_2.fastq.gz nan unstranded control Control_1 778339/merge/Irrel_kd_1.fastq.gz nan unstranded control Mov10_oe_3 778339/merge/Mov10_oe_3.fastq.gz nan unstranded MOV10_overexpression Mov10_oe_2 778339/merge/Mov10_oe_2.fastq.gz nan unstranded MOV10_overexpression Mov10_oe_1 778339/merge/Mov10_oe_1.fastq.gz nan unstranded MOV10_overexpression Mov10_kd_3 778339/merge/Mov10_kd_3.fastq.gz nan unstranded MOV10_knockdown Mov10_kd_2 778339/merge/Mov10_kd_2.fastq.gz nan unstranded MOV10_knockdown <ol> <li> <p>Remember to eat your vegetables.\u00a0\u21a9</p> </li> </ol>"},{"location":"jupyter_example.html","title":"Jupyter notebook example title","text":"<p>Ideally one would add a yaml metadata header to the like this:</p> <pre><code>---\ntitle: Jupyter notebook example\nsummary: A brief description of my document.\ndate: 2000-01-01\nhide:\n    - navigation\n---\n</code></pre> <p>The only way to add \"metadata\" to a jupyter notebook is to modify the notebook metadata itself. However, this is still not caught by mkdocs, so there is no way to add metadata to the html file. Mkdocs material also cannot fetch the hide options from the yaml menu, which is a pity.</p> In\u00a0[5]: Copied! <pre>import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndataset_url = ('https://raw.githubusercontent.com/m-mehdi/pandas_tutorials/main/weekly_stocks.csv')\ndf = pd.read_csv(dataset_url, parse_dates=['Date'], index_col='Date')\npd.set_option('display.max.columns', None)\nprint(df.head())\n</pre> import pandas as pd import numpy as np import matplotlib.pyplot as plt   dataset_url = ('https://raw.githubusercontent.com/m-mehdi/pandas_tutorials/main/weekly_stocks.csv') df = pd.read_csv(dataset_url, parse_dates=['Date'], index_col='Date') pd.set_option('display.max.columns', None) print(df.head()) <pre>                  MSFT          FB        AAPL\nDate                                          \n2021-05-24  249.679993  328.730011  124.610001\n2021-05-31  250.789993  330.350006  125.889999\n2021-06-07  257.890015  331.260010  127.349998\n2021-06-14  259.429993  329.660004  130.460007\n2021-06-21  265.019989  341.369995  133.110001\n</pre> In\u00a0[6]: Copied! <pre>df.plot(y='MSFT', figsize=(9,6))\n</pre> df.plot(y='MSFT', figsize=(9,6)) Out[6]: <pre>&lt;Axes: xlabel='Date'&gt;</pre>"},{"location":"jupyter_example.html#jupyter-notebook-example-title","title":"Jupyter notebook example title\u00b6","text":"<p>Title of the admonition</p> <p> \ud83d\udd70 Time Estimation: X minutes         \ud83d\udcac Learning Objectives:         \u20031. First item         \u20032. Second item </p> <p>Write your introduction to the page here.</p>"},{"location":"jupyter_example.html#writing-admonitions","title":"Writing admonitions\u00b6","text":"<p>You can write admonitions in html code. Unfortunately it has to be this way...</p> <p>You need to write as the class inside the <code>&lt;div&gt;</code> tag \"admonition {type}\", e.g. \"admonition note\" or \"admonition tip\". Then in the following <code>&lt;p&gt;</code> block, you should add the class \"admonition-title\", followed by the title of the admonition. In the next <code>&lt;p&gt;</code> block, you can add the content.</p> <p>Title of the admonition</p> <p> \ud83d\udd70 Time Estimation: X minutes         \ud83d\udcac Learning Objectives:         \u20031. First item         \u20032. Second item </p> <p>Here is an example of a dropdown admonition. You do not need to provide the class in this case since it is wrapped inside the <code>&lt;details&gt;</code> tag, but you need to provide a suitable admonition type in class (e.g., \"warning\" or \"note\"). The title of the admonition is inside the <code>&lt;summary&gt;</code> tag.</p> Title of drop-down <p>     Content     </p> <p>Inside the html</p> <p>Bold text You will need <code>&lt;strong&gt;</code> and <code>&lt;/strong&gt;</code> tags for bold text</p> <p>Italic text You will need the <code>&lt;i&gt;</code> and <code>&lt;/i&gt;</code> tags for italic text</p> <p>Tab You will need the tag <code>&amp;emsp;</code> to add a 4 space tab in html code</p>"},{"location":"jupyter_example.html#running-code","title":"Running code\u00b6","text":"<p>This is some example code</p>"},{"location":"keywords.html","title":"Keywords","text":"<p>Here's a lit of used keywords:</p>"},{"location":"keywords.html#r","title":"R","text":"<ul> <li>Rmarkdown example</li> </ul>"},{"location":"keywords.html#authors","title":"authors","text":"<ul> <li>Contributors</li> </ul>"},{"location":"keywords.html#contributors","title":"contributors","text":"<ul> <li>Contributors</li> </ul>"},{"location":"keywords.html#rmarkdown","title":"rmarkdown","text":"<ul> <li>Rmarkdown example</li> </ul>"},{"location":"rmarkdown_example.html","title":"Rmarkdown example","text":"<p>Section Overview</p> <p>\ud83d\udd70 Time Estimation: X minutes  </p> <p>\ud83d\udcac Learning Objectives:      1. First item     2. Second item  </p> <p>This is an example of how to make md pages from rmarkdown documents. The source code to generate this md document is in <code>develop/rmd/rmarkdown_example.Rmd</code>.</p> <p>First we need to write the document as usual. Try to use the admonitions as in previous examples.</p>","tags":["rmarkdown","R"]},{"location":"rmarkdown_example.html#writing-code","title":"Writing code","text":"<p>You can run code as usual in Rmarkdown. The chunk options can be very useful. By default, the code will not run unless explicity specified in the chunk (you can change this behaviour on the \"knitr\" chunk above).</p> <pre><code>library(tidyverse)\n</code></pre> <pre><code>ggplot(data = txhousing, aes(x = listings, y = sales)) +\ngeom_point()\n</code></pre> <p></p>","tags":["rmarkdown","R"]},{"location":"rmarkdown_example.html#adding-images","title":"Adding images","text":"<p>You can add images using the <code>knitr::include_graphics()</code> option. The images should be in the same folder, otherwise they will break in the step below:</p> <p></p>","tags":["rmarkdown","R"]},{"location":"rmarkdown_example.html#knitting-the-document-and-formatting-item","title":"Knitting the document and formatting item","text":"<p>To use this document in the webpage, you will have to knit it first as a github_document. This is already setup in the yaml menu above. The knitted files will be created in the <code>knit</code> folder. Unfortunately, knitting creates a couple of issues. First, we need to get rid of the knit options of the yaml file. Knitting will also create a header with the title, author and date on the newly created md document. Lastly, for some reason, knitting will change the normal quotes \"\" into cursive quotes \"\". This will completely mess up the admonitions, and mkdocs will not display them properly.</p> <p>In order to solve this issues, there is a small <code>modify_md.ipynb</code> file that will take all the created github_document (*.md) files and fix these issues.</p> <pre><code>from os import listdir\nimport re\nfiles = listdir(\"./knit/\")\nprint(files)\n</code></pre> <pre><code>for i in files:\nif i.endswith(\".md\"):\nwith open(\"./knit/\"+ i) as f:\ntext = f.read()\ntext = re.sub(\"\\nknit((.|\\n)*)\\n[0-9]{4}-[0-9]{2}-[0-9]{2}\\n\", \"\\n---\\n\" ,text)\ntext = re.sub(\"(\"|\")\",\"\\\"\",text)\nwith open(\"./knit/\"+ i, \"w\") as f:\nf.write(text)\n</code></pre> <p>You can then move the knitted documents (and the images if needed) to the <code>develop</code> folder.</p>","tags":["rmarkdown","R"]},{"location":"uCloud.html","title":"Access through uCloud","text":"<p><code>Ucloud</code> is an interactive online platform from the University of Southern Danmark eScience center that allows users to execute softwares and computer code directly from their browser. If you have an account from a danish university, hospital, and other institutions, you can access the platform for free and try the course.</p>"},{"location":"uCloud.html#join-the-workshop-project-containing-the-data","title":"Join the workshop project containing the data","text":"<ul> <li> <p>Log onto ucloud at the address http://cloud.sdu.dk using the university/institution credentials you possess.</p> </li> <li> <p>If you are participating in the OMICS focus group workshop, click AFTER logging in on this link. You should see a message on your browser where you have to accept the invitation to the project. This will add you to a project on uCloud, where we have data and extra computing credit for the course. </p> </li> <li> <p>Be sure you have joined the project. Check if you have the project <code>OMICS workshop</code> from the project menu (red circle). Afterwards, click on the <code>App</code> menu (green circle)</p> </li> </ul> <p></p> <p>Note: The project <code>My Workspace</code> is instead your private space where you have some free hundreds of CPU hours and GBs of memory.</p>"},{"location":"rmd/modify_md.html","title":"Modify md","text":"In\u00a0[33]: Copied! <pre>import os\nimport shutil\nimport re\n</pre> import os import shutil import re In\u00a0[35]: Copied! <pre>source_folder = \"./knit/\"\nimages_folder = \"./images/\"\ndestination_folder = \"../\"\nfiles = os.listdir(source_folder)\n\nprint(files)\n</pre> source_folder = \"./knit/\" images_folder = \"./images/\" destination_folder = \"../\" files = os.listdir(source_folder)  print(files) <pre>['rmarkdown_example.md']\n</pre> In\u00a0[36]: Copied! <pre>for i in files:\n    if i.endswith(\".md\"):\n        with open(source_folder + i) as f:\n            print(\"Processing:\", i, \"\\n\")\n            text = f.read()\n            text = re.sub(\"\\nknit((.|\\n)*)\\n[0-9]{4}-[0-9]+-[0-9]+\\n\", \"\\n---\\n\" ,text)\n            text = re.sub(\"(\u201d|\u201c)\",\"\\\"\",text)\n        with open(source_folder + i, \"w\") as f:\n            f.write(text)\n</pre> for i in files:     if i.endswith(\".md\"):         with open(source_folder + i) as f:             print(\"Processing:\", i, \"\\n\")             text = f.read()             text = re.sub(\"\\nknit((.|\\n)*)\\n[0-9]{4}-[0-9]+-[0-9]+\\n\", \"\\n---\\n\" ,text)             text = re.sub(\"(\u201d|\u201c)\",\"\\\"\",text)         with open(source_folder + i, \"w\") as f:             f.write(text) <pre>Processing: rmarkdown_example.md \n\n</pre> In\u00a0[37]: Copied! <pre>for file_name in os.listdir(source_folder):\n    # construct full file path\n    source = source_folder + file_name\n    destination = destination_folder + file_name\n    shutil.move(source, destination)\n    print('Moved:', file_name)\n</pre> for file_name in os.listdir(source_folder):     # construct full file path     source = source_folder + file_name     destination = destination_folder + file_name     shutil.move(source, destination)     print('Moved:', file_name) <pre>Moved: rmarkdown_example.md\n</pre> In\u00a0[39]: Copied! <pre>def copy_directory(src_dir, dest_dir):\n    if not os.path.exists(dest_dir):\n        os.makedirs(dest_dir)\n    for item in os.listdir(src_dir):\n        src_path = os.path.join(src_dir, item)\n        dest_path = os.path.join(dest_dir, item)\n        if os.path.isdir(src_path):\n            copy_directory(src_path, dest_path)\n        else:\n            shutil.copy2(src_path, dest_path)\n\ncopy_directory(images_folder, destination_folder+\"images/\")\n</pre>  def copy_directory(src_dir, dest_dir):     if not os.path.exists(dest_dir):         os.makedirs(dest_dir)     for item in os.listdir(src_dir):         src_path = os.path.join(src_dir, item)         dest_path = os.path.join(dest_dir, item)         if os.path.isdir(src_path):             copy_directory(src_path, dest_path)         else:             shutil.copy2(src_path, dest_path)  copy_directory(images_folder, destination_folder+\"images/\")"},{"location":"rmd/knit/rmarkdown_example.html","title":"Rmarkdown example","text":"<p>2000-01-01</p>"},{"location":"rmd/knit/rmarkdown_example.html#rmarkdown-example_1","title":"Rmarkdown example","text":"<p>!!! note \u201cSection Overview\u201d</p> <pre><code>&amp;#128368; **Time Estimation:** X minutes\n\n&amp;#128172; **Learning Objectives:**    \n    1. First item  \n    2. Second item\n</code></pre> <p>This is an example of how to make md pages from rmarkdown documents. The source code to generate this md document is in <code>develop/rmd/rmarkdown_example.Rmd</code>.</p> <p>First we need to write the document as usual. Try to use the admonitions as in previous examples.</p>"},{"location":"rmd/knit/rmarkdown_example.html#writing-code","title":"Writing code","text":"<p>You can run code as usual in Rmarkdown. The chunk options can be very useful. By default, the code will not run unless explicity specified in the chunk (you can change this behaviour on the \u201cknitr\u201d chunk above).</p> <pre><code>library(tidyverse)\n</code></pre> <pre><code>ggplot(data = txhousing, aes(x = sales, y = listings)) +\ngeom_point()\n</code></pre> <p></p>"},{"location":"rmd/knit/rmarkdown_example.html#adding-images","title":"Adding images","text":"<p>You can add images using the <code>knitr::include_graphics()</code> option. The images should be in the same folder, otherwise they will break in the step below:</p> <p></p>"},{"location":"rmd/knit/rmarkdown_example.html#knitting-the-document-and-formatting-item","title":"Knitting the document and formatting item","text":"<p>To use this document in the webpage, you will have to knit it first as a github_document. This is already setup in the yaml menu above. The knitted files will be created in the <code>knit</code> folder. Unfortunately, knitting creates a couple of issues. First, we need to get rid of the knit options of the yaml file. Knitting will also create a header with the title, author and date on the newly created md document. Lastly, for some reason, knitting will change the normal quotes \u201c\u201d into cursive quotes \u201c\u201d. This will completely mess up the admonitions, and mkdocs will not display them properly.</p> <p>In order to solve this issues, there is a small <code>modify_md.ipynb</code> file that will take all the created github_document (*.md) files and fix these issues.</p> <pre><code>from os import listdir\nimport re\nfiles = listdir(\"./knit/\")\nprint(files)\n</code></pre> <pre><code>for i in files:\nif i.endswith(\".md\"):\nwith open(\"./knit/\"+ i) as f:\ntext = f.read()\ntext = re.sub(\"\\nknit((.|\\n)*)\\n[0-9]{4}-[0-9]{2}-[0-9]{2}\\n\", \"\\n---\\n\" ,text)\ntext = re.sub(\"(\u201d|\u201c)\",\"\\\"\",text)\nwith open(\"./knit/\"+ i, \"w\") as f:\nf.write(text)\n</code></pre> <p>You can then move the knitted documents (and the images if needed) to the <code>develop</code> folder.</p>"},{"location":"keywords.html","title":"Keywords","text":"<p>Here's a lit of used keywords:</p>"},{"location":"keywords.html#r","title":"R","text":"<ul> <li>Rmarkdown example</li> </ul>"},{"location":"keywords.html#authors","title":"authors","text":"<ul> <li>Contributors</li> </ul>"},{"location":"keywords.html#contributors","title":"contributors","text":"<ul> <li>Contributors</li> </ul>"},{"location":"keywords.html#rmarkdown","title":"rmarkdown","text":"<ul> <li>Rmarkdown example</li> </ul>"}]}